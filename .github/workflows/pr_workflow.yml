name: PR Workflow

on:
  pull_request:
    branches:
      - 'main'
  pull_request_review_comment:
    types: [created, edited, deleted]
 
jobs:
  make-or-update-pr:
    if: github.event.pull_request.base.ref == 'develop' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: Release notes

      - name: Create comment link
        id: create_link
        run: |
          echo "COMMENT_LINK=https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ steps.fc.outputs.comment-id }}" >> $GITHUB_ENV
        shell: bash

      - uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.PR_APP_ID }}
          private_key: ${{ secrets.PR_APP_TOKEN }}
      
      - name: Run Python script
        run: |
          import requests
          import sys
          import os
      
          def parse_base_params(comment_link):
            response = requests.get(comment_link).json()
            try:
              lines = response["body"].split("\n")
            except:
              print("Please, create a comment with 'Release time: YYYY-MM-DDTHH:MM:SSZ', 'Release severity: Major | Critical | Normal', 'Release version: 1.2.3' and 'Release notes:'")
              exit(1)
            time = next((s.split(': ')[1] for s in lines if s.startswith('Release time: ')), '').strip()
            version = next((s.split(': ')[1] for s in lines if s.startswith('Release version: ')), '').strip()
            severity = next((s.split(': ')[1] for s in lines if s.startswith('Release severity: ')), '').strip()

            if not time or not severity:
              print(f"Current values: Time - '{time}', Severity - '{severity}'")
              print("Time or severity cannot be empty, please set it in the PR comment with lines 'Release time:' and 'Release severity:'")
              sys.exit(1)

            with open(os.getenv('GITHUB_ENV'), 'a') as f:
                f.write(f'TIME={time}\n')
                f.write(f'SEVERITY={severity}\n')
                f.write(f'VERSION={version}\n')
          parse_base_params(os.getenv("COMMENT_LINK"))
        shell: python

      - name: Create new branch and file in nova-wallet-android-releases repo
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ steps.generate-token.outputs.token }}
          repository: novasamatech/nova-wallet-android-releases
          event-type: create-pr
          client-payload: '{"version": "${{ env.VERSION }}", "comment_link": "${{ env.COMMENT_LINK }}", "time": "${{ env.TIME }}", "severity": "${{ env.SEVERITY }}"}'
